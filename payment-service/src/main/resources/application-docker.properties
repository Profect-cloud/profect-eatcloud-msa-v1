server.port=8087
spring.application.name=payment-service



# Eureka disabled for ECS
eureka.client.enabled=${EUREKA_CLIENT_ENABLED:true}
spring.cloud.discovery.enabled=${SPRING_CLOUD_DISCOVERY_ENABLED:true}

spring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.data-locations=classpath:db/data.sql
spring.jpa.defer-datasource-initialization=true

spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.database=0

payment.mock.enabled=true

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

logging.level.com.eatcloud.orderservice=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG

# Kafka (Docker)
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

# OAuth2 Resource Server (JWT via auth-service)
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://auth-service:8081/api/v1/auth/.well-known/jwks.json