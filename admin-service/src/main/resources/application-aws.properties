server.port=8083
spring.application.name=admin-service

# Eureka ?? ????
eureka.client.enabled=false
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
spring.cloud.discovery.enabled=false
spring.cloud.service-registry.auto-registration.enabled=false

# AutoConfiguration ??
spring.autoconfigure.exclude=org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration,org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration

# ?????? ??
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/admin_db
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true

# Redis ??
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379
spring.data.redis.ssl.enabled=false
spring.data.redis.timeout=2000ms

# Session Configuration
spring.session.store-type=redis

# Actuator for ELB Health Check
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# ??
logging.level.com.netflix.discovery=OFF
logging.level.org.springframework.cloud.netflix.eureka=OFF
logging.level.com.eatcloud.customerservice=INFO