server.port=8080
spring.application.name=api-gateway

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://eureka-server:8761/eureka/}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=api-gateway

# CORS Configuration
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[0]=GET
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[1]=POST
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[2]=PUT
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[3]=DELETE
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[4]=PATCH
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedMethods[5]=OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowCredentials=true
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].maxAge=3600

# Logging Configuration
logging.level.com.eatcloud.apigateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG

jwt.secret=${JWT_SECRET}